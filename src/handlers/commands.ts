import TelegramBot from 'node-telegram-bot-api';
import { TelegramUser } from '../types';
import { recordUser } from '../services/dynamodb';
import { generateAuthLink } from '../services/auth';
import { logger } from '../utils/logger';
import { PaymentError } from '../utils/errors';
import {createPaymentInvoice} from "./payments/payments";
// import { Message } from 'node-telegram-bot-api';

export async function handleStart(bot: TelegramBot, chatId: number, user: TelegramUser) {
  logger.user('Processing /start command', user.id.toString(), {
    username: user.username,
    languageCode: user.language_code
  });

  await recordUser(user);

  logger.debug('Sending welcome message', { chatId, userId: user.id });
  await bot.sendPhoto(
      chatId,
      'https://videos-582347504313.s3.amazonaws.com/bb3c5120-c598-448f-912a-eb0502517df9.jfif',
      {
        caption: `${user.first_name},\n\nüí∞–•–æ—á–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞ –≥—Ä–∞–Ω–∏—Ü–µ–π? –¢—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –º–µ—Å—Ç–µ! –ï—Å—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É! \n\nüåè –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª–∏—Ç —Ç–µ–±–µ —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π. \n\nüëã –ú–µ–Ω—è –∑–æ–≤—É—Ç –õ–∏–ª—è, –∏ —è —É–∂–µ 9 –ª–µ—Ç –∂–∏–≤—É –∏ —Ä–∞–±–æ—Ç–∞—é –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö. –ó–∞ –º–æ–∏–º–∏ –ø–ª–µ—á–∞–º–∏ —Ä–∞–±–æ—á–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –≤ —Å—Ç—Ä–∞–Ω–∞—Ö –ê–∑–∏–∏ –∏ –ë–ª–∏–∂–Ω–µ–≥–æ –í–æ—Å—Ç–æ–∫–∞. –°–æ –º–Ω–æ–π —Ç—ã –ø–æ–ª—É—á–∏—à—å –¥–æ—Å—Ç—É–ø –∫ –Ω–µ–æ–±—ã—á–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º —Ä–∞–±–æ—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ. \n\n‚≠êÔ∏è –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –º–µ–Ω—è? –Ø –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å, –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–∞–Ω–¥–∏–¥–∞—Ç—É. –ü—É—Ç–µ—à–µ—Å—Ç–≤—É–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –±–æ–ª—å—à–µ, —á–µ–º –≤ —Å–≤–æ—ë–º –≥–æ—Ä–æ–¥–µ!`
      }
  );
  await bot.sendMessage(
      chatId,
      `–ö–∞–∫–∏–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏?`
  );
  await bot.sendMessage(
      chatId,
      `–®–∞–≥ 1: –ü–æ—Å–º–æ—Ç—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ –º–æ–µ–º –∫–∞–Ω–∞–ª–µ...`
  );
  await bot.sendMessage(
      chatId,
      `–®–∞–≥ 2: –ü–æ—Å–º–æ—Ç—Ä–∏ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É... –Ø –ø–∞—Ä—à—É 5 —Å–∞–π—Ç–æ–≤. –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç. –¢–µ–ø–µ—Ä—å –µ–≥–µ –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—ã...`
  );
  // await bot.sendMessage(
  //     chatId,
  //     `PS: –í–æ–ø—Ä–æ—Å—ã... –ø–∏—à–∏ –ª–∏—á–Ω–æ @vitkuzzzs. —Ç–æ–ª—å–∫–æ –¥–µ—Ç–∞–ª—å–Ω–æ –ø–∏—à–∏. –Ω–∏—á–µ —Å—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—é –≤ –∏–≥–Ω–æ—Ä`
  // );
  await bot.sendMessage(
      chatId,
      `üëâ PS: –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –º–æ–∏ —Å–æ—Ü—Å–µ—Ç–∏ –∏ –±—É–¥—å –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π üö®, –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≥–æ—Ä—è—á–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π üî• –∏ –∏—Å—Ç–æ—Ä–∏–π –∏–∑ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π! üåè‚úàÔ∏è`,
      {
        parse_mode: 'HTML',
        reply_markup: {
          inline_keyboard: [
            [{
              text: `–ú–æ–π –∏–Ω—Å—Ç–∞–≥—Ä–∞–º`,
              url: 'https://www.instagram.com/lily.travelgirl/'
            }],
            [{
              text: `–ú–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º`,
              url: 'https://t.me/siberian_lily'
            }],
            [{
              text: `–ú–æ–∏ –≤–∞–∫–∞–Ω—Å–∏–∏`,
              url: 'https://t.me/travelgig_jobs'
            }],
            [{
              text: `–í–∞–∫–∞–Ω—Å–∏–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É`,
              url: 'https://tracker.travelgig.info/'
            }],
            [{
              text: `–ú–æ–π —Å–∞–π—Ç`,
              url: 'https://travelgig.info/'
            }]
          ]
        }
      }
  );
}

export async function handleLogin(bot: TelegramBot, chatId: number, userId: string) {
  logger.user('Processing /login command', userId);

  const authLink = await generateAuthLink(userId);

  logger.debug('Sending auth link', { chatId, userId });
  await bot.sendMessage(
      chatId,
      `–í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞:\n\n${authLink}`
  );
}

export async function handlePayment(bot: TelegramBot, chatId: number) {
  try {
    await createPaymentInvoice(bot, chatId);
  } catch (error) {
    if (error instanceof PaymentError) {
      await bot.sendMessage(
          chatId,
          '‚ùå Sorry, there was an error creating the payment. Please try again later.'
      );
    }
    throw error; // Re-throw for logging/monitoring
  }
}